<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
<!-- 
	<afp:AttributeFilterPolicy id="InCommonRelease">
		<afp:PolicyRequirementRule xsi:type="basic:ANY" />
		<afp:AttributeRule attributeID="affiliation">
			<afp:DenyValueRule xmlns="urn:mace:shibboleth:2.0:afp:mf:basic"
				xsi:type="OR">
				<Rule xsi:type="AttributeValueString" value="staff" />
				<Rule xsi:type="AttributeValueString" value="student" />
			</afp:DenyValueRule>
		</afp:AttributeRule>
	</afp:AttributeFilterPolicy> -->

    <bean id="shibboleth.ANYPolicyRule"  class="#{ T(net.shibboleth.idp.attribute.filter.PolicyRequirementRule).MATCHES_ALL.getClass().getName() }" />
    <bean id="shibboleth.ANYMatcher"  class="#{ T(net.shibboleth.idp.attribute.filter.Matcher).MATCHES_ALL.getClass().getName() }" />
    <bean id="shibboleth.AttributeValueStringMatcher"  class="net.shibboleth.idp.attribute.filter.matcher.impl.AttributeValueStringMatcher" abstract="true"/>
    <bean id="shibboleth.OrMatcher"  class="net.shibboleth.idp.attribute.filter.matcher.logic.impl.OrMatcher" abstract="true"/>
    
    <bean class="net.shibboleth.idp.attribute.filter.AttributeFilterPolicy" c:policyId="InCommonRelease" c:requirementRule-ref="shibboleth.ANYPolicyRule">
        <constructor-arg name="attributeRules">
            <bean class="net.shibboleth.idp.attribute.filter.AttributeRule" p:isDenyRule="true" p:attributeId="affiliation">
                <property name="matcher">
                    <bean parent="shibboleth.OrMatcher" >
                        <constructor-arg name="composedMatchers">
                            <list>
                                <bean parent="shibboleth.AttributeValueStringMatcher" p:matchString="staff"/>
                                <bean parent="shibboleth.AttributeValueStringMatcher" p:matchString="student"/>
                            </list>
                        </constructor-arg>
                    </bean>
                </property>
            </bean>
        </constructor-arg>
    </bean> 
    
    <!--  
 	<afp:AttributeFilterPolicy id="InCommonRelease2">
		<afp:PolicyRequirementRule xsi:type="basic:ANY" />
		<afp:AttributeRule attributeID="affiliation">
			<afp:PermitValueRule xsi:type="basic:ANY" />
		</afp:AttributeRule>
	</afp:AttributeFilterPolicy> -->
    <bean class="net.shibboleth.idp.attribute.filter.AttributeFilterPolicy" c:policyId="InCommonRelease2" c:requirementRule-ref="shibboleth.ANYPolicyRule">
        <constructor-arg name="attributeRules">
                <bean class="net.shibboleth.idp.attribute.filter.AttributeRule" p:isDenyRule="false" p:attributeId="affiliation" p:matcher-ref="shibboleth.ANYMatcher"/>
        </constructor-arg>
    </bean> 

<!--  </afp:AttributeFilterPolicyGroup> -->
</beans>