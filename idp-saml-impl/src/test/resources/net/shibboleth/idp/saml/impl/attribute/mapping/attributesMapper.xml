<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  This is what we are trying to reverse map (note bi-directional aliasing, just to confuse things.  And me.
    
            <resolver:AttributeDefinition xsi:type="ad:Simple" id="eduPersonAssurance" sourceAttributeID="eduPersonAssurance">
                <resolver:AttributeEncoder xsi:type="enc:SAML1String" name="urn:mace:dir:attribute-def:eduPersonAssurance" />
                <resolver:AttributeEncoder xsi:type="enc:SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.11" friendlyName="eduPersonAssurance" />
                <resolver:AttributeEncoder xsi:type="enc:SAML2String" nameFormat="http://example.org/Format" name="http://example.org/name/for/Attribute" friendlyName="otherSAMLName" />
            </resolver:AttributeDefinition>

            <resolver:AttributeDefinition xsi:type="ad:Simple" id="otherPersonAssurance" sourceAttributeID="otherPersonAssurance">
                <resolver:AttributeEncoder xsi:type="enc:SAML1String" name="urn:mace:dir:attribute-def:eduPersonAssurance" />
                <resolver:AttributeEncoder xsi:type="enc:SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.11" friendlyName="eduPersonAssurance" />
            </resolver:AttributeDefinition>
                
            <resolver:AttributeDefinition xsi:type="ad:Scoped" id="eduPersonScopedAffiliation" scope="example.org" 
                                          sourceAttributeID="eduPersonAffiliation">
                <resolver:AttributeEncoder xsi:type="enc:SAML1ScopedString" name="urn:mace:dir:attribute-def:eduPersonScopedAffiliation" />
                <resolver:AttributeEncoder xsi:type="enc:SAML2ScopedString" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.9" friendlyName="eduPersonScopedAffiliation" 
                       scopeDelimiter='#'/>
            </resolver:AttributeDefinition>
            
            <resolver:AttributeDefinition xsi:type="ad:SAML2NameID" id="eduPersonTargetedID" 
                                          nameIdFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" sourceAttributeID="computedID">
                <resolver:AttributeEncoder xsi:type="enc:SAML1XMLObject" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.10" />
                <resolver:AttributeEncoder xsi:type="enc:SAML2XMLObject" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.10" friendlyName="eduPersonTargetedID" />
            </resolver:AttributeDefinition> 
    
    
          But note that this is unmappable (no source name)
          
            <resolver:AttributeDefinition id="transientId" xsi:type="ad:TransientId">
                <resolver:AttributeEncoder xsi:type="enc:SAML1StringNameIdentifier" nameFormat="urn:mace:shibboleth:1.0:nameIdentifier"/>
                <resolver:AttributeEncoder xsi:type="enc:SAML2StringNameID" nameFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:transient"/>
            </resolver:AttributeDefinition>
          
    
     -->
     
	<bean id="abstractStringMapper" init-method="initialize" abstract="true" 
		class="net.shibboleth.idp.saml.attribute.mapping.impl.RequestedAttributeMapper">
		<property name="valueMapper">
			<bean
				class="net.shibboleth.idp.saml.attribute.mapping.impl.StringAttributeValueMapper" />
		</property>
	</bean>

	<bean id="RequestedAttributesMapper"
		class="net.shibboleth.idp.saml.attribute.mapping.impl.RequestedAttributesMapper"
		init-method="initialize" p:id="RequestedAttributesMapper">
		<property name="mappers">
			<list>
				<bean parent="abstractStringMapper">
					<property name="id" value="eduPersonAssurance" />
					<property name="SAMLName" value="urn:oid:1.3.6.1.4.1.5923.1.1.1.11" />
					<property name="attributeIds">
						<list>
							<value>eduPersonAssurance</value>
							<value>otherPersonAssurance</value>
						</list>
					</property>
				</bean>
				<bean parent="abstractStringMapper">
					<property name="SAMLName" value="http://example.org/name/for/Attribute" />
					<property name="id" value="otherSAMLName" />
					<property name="attributeFormat" value="http://example.org/Format " />
					<property name="attributeIds">
						<list>
							<value>eduPersonAssurance</value>
						</list>
					</property>
				</bean>
				<bean parent="abstractStringMapper">
					<property name="sAMLName" value="urn:oid:1.3.6.1.4.1.5923.1.1.1.9" />
					<property name="id" value="eduPersonScopedAffiliation" />
					<property name="attributeFormat" value=" format " />
					<property name="valueMapper">
						<bean
							class="net.shibboleth.idp.saml.attribute.mapping.impl.ScopedStringAttributeValueMapper"
							p:delimiter="#" />
					</property>
					<property name="attributeIds">
						<list>
							<value>eduPersonScopedAffiliation</value>
						</list>
					</property>
				</bean>
				<bean parent="abstractStringMapper">
				    <property name="attributeFormat" value="format"/>
					<property name="sAMLName" value="urn:oid:1.3.6.1.4.1.5923.1.1.1.10"/>
					<property name="id" value="eduPersonTargetedID"/>
					<property name="valueMapper">
						<bean
							class="net.shibboleth.idp.saml.attribute.mapping.impl.XMLObjectAttributeValueMapper" />
					</property>
					<property name="attributeIds">
						<list>
							<value>eduPersonTargetedID</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
</beans>