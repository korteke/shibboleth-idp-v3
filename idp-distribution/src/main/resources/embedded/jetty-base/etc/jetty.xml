<?xml version="1.0"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_9_0.dtd">
<!-- 
    NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE
    
    Automated install on Windows will overwrite this file.  If you edit
    this file you will lose your changes on each upgrade.
    
    If you need to change this file you need to manage your container
    yourself and not rely on the windows installer to upgrade your
    system.
    
    If you believe that your change is generally useful, please submit
    an RFI at https://issues.shibboleth.net/ 

 -->
<!-- =============================================================== -->
<!-- Documentation of this file format can be found at:              -->
<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
<!--                                                                 -->
<!-- Additional configuration files are available in $JETTY_HOME/etc -->
<!-- and can be mixed in. See start.ini file for the default         -->
<!-- configuration files.                                            -->
<!--                                                                 -->
<!-- For a description of the configuration mechanism, see the       -->
<!-- output of:                                                      -->
<!--   java -jar start.jar -?                                        -->
<!-- =============================================================== -->

<!-- =============================================================== -->
<!-- Configure a Jetty Server instance with an ID "Server"           -->
<!-- Other configuration files may also configure the "Server"       -->
<!-- ID, in which case they are adding configuration to the same     -->
<!-- instance.  If other configuration have a different ID, they     -->
<!-- will create and configure another instance of Jetty.            -->
<!-- Consult the javadoc of o.e.j.server.Server for all              -->
<!-- configuration that may be set here.                             -->
<!-- =============================================================== -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <!-- =========================================================== -->
    <!-- Configure the Server Thread Pool.                           -->
    <!-- The server holds a common thread pool which is used by      -->
    <!-- default as the executor used by all connectors and servlet  -->
    <!-- dispatches.                                                 -->
    <!--                                                             -->
    <!-- Configuring a fixed thread pool is vital to controlling the -->
    <!-- maximal memory footprint of the server and is a key tuning  -->
    <!-- parameter for tuning.  In an application that rarely blocks -->
    <!-- then maximal threads may be close to the number of 5*CPUs.  -->
    <!-- In an application that frequently blocks, then maximal      -->
    <!-- threads should be set as high as possible given the memory  -->
    <!-- available.                                                  -->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->
    <!-- for all configuration that may be set here.                 -->
    <!-- =========================================================== -->
    <Get name="ThreadPool">
      <Set name="minThreads" type="int"><Property name="threads.min" default="10" /></Set>
      <Set name="maxThreads" type="int"><Property name="threads.max" default="200" /></Set>
      <Set name="idleTimeout" type="int"><Property name="threads.timeout" default="60000" /></Set>
      <Set name="detailedDump">false</Set>
    </Get>

    <!-- =========================================================== -->
    <!-- Add shared Scheduler instance                               -->
    <!-- =========================================================== -->
    <Call name="addBean">
      <Arg>
        <New class="org.eclipse.jetty.util.thread.ScheduledExecutorScheduler" />
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Http Configuration.                                         -->
    <!-- This is a common configuration instance used by all         -->
    <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY)-->
    <!-- It configures the non wire protocol aspects of the HTTP     -->
    <!-- semantic.                                                   -->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->
    <!-- for all configuration that may be set here.                 -->
    <!-- =========================================================== -->
    <New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
      <Set name="secureScheme">https</Set>
      <Set name="securePort"><Property name="jetty.secure.port" default="8443" /></Set>
      <Set name="outputBufferSize"><Property name="jetty.output.buffer.size" default="32768" /></Set>
      <Set name="requestHeaderSize"><Property name="jetty.request.header.size" default="8192" /></Set>
      <Set name="responseHeaderSize"><Property name="jetty.response.header.size" default="8192" /></Set>
      <Set name="sendServerVersion"><Property name="jetty.send.server.version" default="true" /></Set>
      <Set name="sendDateHeader"><Property name="jetty.send.date.header" default="false" /></Set>
      <Set name="headerCacheSize">512</Set>
      <!-- Uncomment to enable handling of X-Forwarded- style headers
      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
      </Call>
      -->
    </New>


    <!-- =========================================================== -->
    <!-- Add a HTTP Connector.                                       -->
    <!-- Configure an o.e.j.server.ServerConnector with a single     -->
    <!-- HttpConnectionFactory instance using the common httpConfig  -->
    <!-- instance defined in jetty.xml                               -->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.server.ServerConnector and     -->
    <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
    <!-- that may be set here.                                       -->
    <!-- =========================================================== -->

    <Call name="addConnector">
      <Arg>
        <New class="org.eclipse.jetty.server.ServerConnector">
          <Arg name="server"><Ref refid="Server" /></Arg>
          <Arg name="factories">
            <Array type="org.eclipse.jetty.server.ConnectionFactory">
              <Item>
                <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                  <Arg name="config"><Ref refid="httpConfig" /></Arg>
                </New>
              </Item>
            </Array>
          </Arg>
          <Set name="host"><Property name="jetty.nonhttps.host" default="localhost" /></Set>
          <Set name="port"><Property name="jetty.nonhttps.port" default="8080" /></Set>
          <Set name="idleTimeout"><Property name="http.timeout" default="30000" /></Set>
          <Set name="soLingerTime"><Property name="http.soLingerTime" default="-1"/></Set>
        </New>
      </Arg>
    </Call>

    <!-- ============================================================= -->
    <!-- Configure a TLS (SSL) Context Factory                         -->
    <!-- ============================================================= -->
    <New id="sslContextFactory" class="org.eclipse.jetty.util.ssl.SslContextFactory">
      <Set name="KeyStorePath"><Property name="jetty.browser.keystore.path" /></Set>
      <Set name="KeyStoreType"><Property name="jetty.browser.keystore.type" /></Set>
      <Set name="KeyStorePassword"><Property name="jetty.browser.keystore.password" /></Set>
      <Set name="EndpointIdentificationAlgorithm"></Set>
      <Set name="NeedClientAuth"><Property name="jetty.ssl.needClientAuth" default="false"/></Set>
      <Set name="WantClientAuth"><Property name="jetty.ssl.wantClientAuth" default="false"/></Set>
      <Set name="excludeProtocols">
        <Array type="String">
          <Item>SSLv3</Item>
        </Array>
     </Set>
      <Set name="IncludeCipherSuites">
        <Array type="String">
          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_RSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_RSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA</Item>

          <Item>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</Item>
          <Item>TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA</Item>

          <Item>TLS_RSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_RSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_RSA_WITH_AES_256_CBC_SHA</Item>
          <Item>SSL_RSA_WITH_3DES_EDE_CBC_SHA</Item>
        </Array>
      </Set>
    </New>

    <!-- ============================================================= -->
    <!-- Configure a No-Validation TLS (SSL) Context Factory           -->
    <!-- ============================================================= -->
    <New id="shibContextFactory" class="net.shibboleth.utilities.jetty9.DelegateToApplicationSslContextFactory">
      <Set name="KeyStorePath"><Property name="jetty.backchannel.keystore.path" /></Set>
      <Set name="KeyStoreType"><Property name="jetty.backchannel.keystore.type" /></Set>
      <Set name="KeyStorePassword"><Property name="jetty.backchannel.keystore.password" /></Set>
      <Set name="EndpointIdentificationAlgorithm"></Set>
      <Set name="excludeProtocols">
        <Array type="String">
          <Item>SSLv3</Item>
        </Array>
     </Set>
      <Set name="IncludeCipherSuites">
        <Array type="String">
          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_RSA_WITH_AES_128_GCM_SHA256</Item>
          <Item>TLS_RSA_WITH_AES_256_GCM_SHA384</Item>

          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</Item>

          <Item>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</Item>

          <Item>TLS_RSA_WITH_AES_128_CBC_SHA256</Item>
          <Item>TLS_RSA_WITH_AES_256_CBC_SHA384</Item>
          <Item>TLS_RSA_WITH_AES_128_CBC_SHA</Item>
          <Item>TLS_RSA_WITH_AES_256_CBC_SHA</Item>
        </Array>
      </Set>
    </New>

    <!-- =========================================================== -->
    <!-- Create a TLS specific HttpConfiguration based on the        -->
    <!-- common HttpConfiguration defined in jetty.xml               -->
    <!-- Add a SecureRequestCustomizer to extract certificate and    -->
    <!-- session information                                         -->
    <!-- =========================================================== -->
    <New id="sslHttpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
      <Arg><Ref refid="httpConfig" /></Arg>
      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.SecureRequestCustomizer" /></Arg>
      </Call>
    </New>

    <!-- =========================================================== -->
    <!-- Add a HTTPS Connector.                                      -->
    <!-- Configure an o.e.j.server.ServerConnector with connection   -->
    <!-- factories for TLS (aka SSL) and HTTP to provide HTTPS.      -->
    <!-- All accepted TLS connections are wired to a HTTP connection.-->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.server.ServerConnector,        -->
    <!-- o.e.j.server.SslConnectionFactory and                       -->
    <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
    <!-- that may be set here.                                       -->
    <!-- =========================================================== -->
    <Call id="httpsConnector" name="addConnector">
      <Arg>
        <New class="org.eclipse.jetty.server.ServerConnector">
          <Arg name="server"><Ref refid="Server" /></Arg>
          <Arg name="factories">
            <Array type="org.eclipse.jetty.server.ConnectionFactory">
              <Item>
                <New class="org.eclipse.jetty.server.SslConnectionFactory">
                  <Arg name="next">http/1.1</Arg>
                  <Arg name="sslContextFactory"><Ref refid="sslContextFactory" /></Arg>
                </New>
              </Item>
              <Item>
                <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                  <Arg name="config"><Ref refid="sslHttpConfig" /></Arg>
                </New>
              </Item>
            </Array>
          </Arg>
          <Set name="host"><Property name="jetty.host" default="localhost" /></Set>
          <Set name="port"><Property name="jetty.https.port" default="8443" /></Set>
          <Set name="idleTimeout"><Property name="https.timeout" default="30000"/></Set>
          <Set name="soLingerTime"><Property name="https.soLingerTime" default="-1"/></Set>
        </New>
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Add a HTTPS Connector for SOAP                              -->
    <!-- Configure an o.e.j.server.ServerConnector with connection   -->
    <!-- factories for TLS (aka SSL) and HTTP to provide HTTPS.      -->
    <!-- All accepted TLS connections are wired to a HTTP connection.-->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.server.ServerConnector,        -->
    <!-- o.e.j.server.SslConnectionFactory and                       -->
    <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
    <!-- that may be set here.                                       -->
    <!-- =========================================================== -->
    <Call id="httpsSOAPConnector" name="addConnector">
      <Arg>
        <New class="org.eclipse.jetty.server.ServerConnector">
          <Arg name="server"><Ref refid="Server" /></Arg>
          <Arg name="factories">
            <Array type="org.eclipse.jetty.server.ConnectionFactory">
              <Item>
                <New class="org.eclipse.jetty.server.SslConnectionFactory">
                  <Arg name="next">http/1.1</Arg>
                  <Arg name="sslContextFactory"><Ref refid="shibContextFactory" /></Arg>
                </New>
              </Item>
              <Item>
                <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                  <Arg name="config"><Ref refid="sslHttpConfig" /></Arg>
                </New>
              </Item>
            </Array>
          </Arg>
          <Set name="host"><Property name="jetty.host" default="localhost" /></Set>
          <Set name="port"><Property name="jetty.backchannel.port" default="9443" /></Set>
          <Set name="idleTimeout">30000</Set>
        </New>
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Set the default handler structure for the Server            -->
    <!-- A handler collection is used to pass received requests to   -->
    <!-- both the ContextHandlerCollection, which selects the next   -->
    <!-- handler by context path and virtual host, and the           -->
    <!-- DefaultHandler, which handles any requests not handled by   -->
    <!-- the context handlers.                                       -->
    <!-- Other handlers may be added to the "Handlers" collection,   -->
    <!-- for example the jetty-requestlog.xml file adds the          -->
    <!-- RequestLogHandler after the default handler                 -->
    <!-- =========================================================== -->
    <Set name="handler">
      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
        <Set name="handlers">
          <Array type="org.eclipse.jetty.server.Handler">
            <Item>
              <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection" />
            </Item>
            <Item>
              <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler" />
            </Item>
          </Array>
        </Set>
      </New>
    </Set>

    <!-- =========================================================== -->
    <!-- extra server options                                        -->
    <!-- =========================================================== -->
    <Set name="stopAtShutdown">true</Set>
    <Set name="stopTimeout">5000</Set>
    <Set name="dumpAfterStart"><Property name="jetty.dump.start" default="false" /></Set>
    <Set name="dumpBeforeStop"><Property name="jetty.dump.stop" default="false" /></Set>

</Configure>
